variables:
  ARTIFACTORY_REGISTRY: ARTIFACTORY_REGISTRY
  ARTIFACTORY_TOKEN: ARTIFACTORY_TOKEN
  ARTIFACTORY_URL: NPM_REGISTRY
  ARTIFACTORY_USER: ARTIFACTORY_USER
  NPM_TOKEN: NPM_TOKEN
  STYLES_MODULE_NAME: "${CI_PROJECT_NAME}-styles"

stages:
  - test
  - deploy
  - deploy-static

.test_sit: &test_sit
    image: registry.vdc.sky/digital-platforms/sdc/toolbelt:latest

# @todo Disabled these tests, this project isn't a traditional component & needs more work to support them
#test:unit:
#  stage: test
#  <<: *test_sit
#  script:
#    - npm install && toolbelt test
#
#test:lint:
#  stage: test
#  <<: *test_sit
#  script:
#    - npm install && toolbelt lint

deploy:artifactory:
  stage: deploy
  tags:
    - shell
  only:
    - tags
  script:
    - ARTIFACTORY_DOCKER_IMAGE=$ARTIFACTORY_REGISTRY/digital-platforms/sdc/sdc-artifactory-uploader:latest
    - docker login -u $ARTIFACTORY_USER -p $ARTIFACTORY_TOKEN $ARTIFACTORY_REGISTRY
    - docker pull $ARTIFACTORY_DOCKER_IMAGE
    - docker run -v $(pwd):/sourcecode -i -e ARTIFACT_TYPE='npm' -e ARTIFACTORY_URL=$ARTIFACTORY_URL -e PROJECT_NAME=$CI_PROJECT_NAME -e BRANCH_NAME=$CI_COMMIT_REF_NAME -e COMMIT_HASH=$CI_BUILD_REF -e ARTIFACTORY_TOKEN=$NPM_TOKEN $ARTIFACTORY_DOCKER_IMAGE

deploy:static-artifactory:
  stage: deploy-static
  tags:
    - shell
  only:
    - tags
  script:
    - ARTIFACTORY_DOCKER_IMAGE=$ARTIFACTORY_REGISTRY/digital-platforms/sdc/sdc-artifactory-uploader:latest
    - docker login -u $ARTIFACTORY_USER -p $ARTIFACTORY_TOKEN $ARTIFACTORY_REGISTRY
    - docker pull $ARTIFACTORY_DOCKER_IMAGE
    - npm install
    - npm run export-static
    - cd dist
    - sed -i s/##ARTIFACTORY_TOKEN##/${ARTIFACTORY_TOKEN}/g .npmrc
    - NPM_REGISTRY=https://sky.jfrog.io/sky/api/npm/npm/
    - npm config set registry $NPM_REGISTRY
    - npm publish --registry $NPM_REGISTRY --always-auth    