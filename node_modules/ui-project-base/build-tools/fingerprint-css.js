// FINGERPRINT-CSS.JS
// ===================

// get dependencies
var fs = require('fs');
var path = require('path');
var clc = require('cli-color');

// get utility functions
var checksum = require('./get-checksum.js');
var fingerprintTools = require('./fingerprint-tools.js');

// path consts
var ROOT = path.resolve(process.cwd());
var CSS_MIN_WEB_PATH = '/css/min/';
var CSS_MIN_FOLDER_PATH = path.join(ROOT, '/web/css/min/');

// create css config path object
var config = {};

fs.readdirSync(CSS_MIN_FOLDER_PATH).forEach(function(file){

  // skip any none .css files
  if(path.extname(file) != '.css') {
    return;
  }

  // get file and fingerprint
  var filepath = path.join(CSS_MIN_FOLDER_PATH, file);
  var webPath = path.join(CSS_MIN_WEB_PATH, file);
  var fileName = path.parse(file).name;
  var fingerprint = checksum(fs.readFileSync(filepath, 'utf8'));

  // skip if the file is already fingerprinted
  if (file.indexOf(fingerprint) > -1) {
    console.info(clc.yellow(file + " already fingerprinted"));
    return;
  }

  var newName = fileName + '-' + fingerprint;

  // rename file to fingerprinted version
  fs.renameSync(filepath, filepath.replace(fileName, newName));

  // write config with fingerprinted file
  config[file] = webPath.replace(fileName, newName);

  console.info(clc.green("Successfully fingerprinted " + file));
});

fingerprintTools.writeMultiple(config);
