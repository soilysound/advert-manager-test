var fse = require('fs-extra');
var path = require('path');
var clc = require('cli-color');
var { minify } = require('terser');
var checksum = require('./get-checksum.js');
var fingerprintTools = require('./fingerprint-tools.js');

var ROOT = path.resolve(process.cwd());
var PACKAGE = require(path.join(ROOT, 'package.json'));
var JS_MIN_FOLDER = '/js/min/';
var JS_MIN_FOLDER_PATH = path.join(ROOT, 'web', JS_MIN_FOLDER);

// Process any vendor files that should be minified and fingerprinted in the package file
if (PACKAGE['config']['project-base'] && PACKAGE['config']['project-base']['vendorjs']) {
  PACKAGE['config']['project-base']['vendorjs'].forEach(function(file) {
    var fileMeta = path.parse(file);
    var fileContents = fse.readFileSync(file, 'utf-8');
    if (fileMeta.ext !== '.js' || !fileContents) {
      return;
    }

    (async () => {
      const result = await minify(fileContents, {
        fromString: true
      });
      var fingerprint = checksum(result.code);
      var newFileName = fileMeta.name + '-' + fingerprint;
      var newFilePath = newFileName + fileMeta.ext;

      fingerprintTools.write(fileMeta.name + '-js', path.join(JS_MIN_FOLDER, newFilePath));

      fse.writeFileSync(path.join(JS_MIN_FOLDER_PATH, newFilePath), result.code, 'utf8');
      console.log(clc.green('File Minified:', path.join(JS_MIN_FOLDER, newFilePath)));
    });
  })
}
