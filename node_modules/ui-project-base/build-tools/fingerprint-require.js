// FINGERPRINT-JS.JS
// ===================

// get dependencies
var fs = require('fs');
var path = require('path');
var clc = require('cli-color');

// get utility functions
var configtools = require('./config-tools.js');
var checksum = require('./get-checksum.js');
var fingerprintTools = require('./fingerprint-tools.js');

// path consts
var ROOT = path.resolve(process.cwd());
var WEB_ROOT = ROOT + '/web';
var JS_MIN_WEB_PATH = 'js/min/';
var JS_MIN_FOLDER = ROOT + '/web/js/min/';

// get require js config min file
var requireConfig = configtools.strip(fs.readFileSync(WEB_ROOT + '/require-config.js', 'utf8').toString());

Object.keys(requireConfig.paths).forEach(function(name){

  var filepath = JS_MIN_FOLDER + name + '.js';

  if (!fs.existsSync(filepath)) {
    console.info(clc.yellow("Couldn't find file. Has it already been fingerprinted? File: " + filepath));
    return;
  }

  // get new md5 fingerprint
  var fingerprint = checksum(fs.readFileSync(filepath, 'utf8'));
  var newName = name + '-' + fingerprint;
  var newPath = filepath.replace(name, newName);

  // rename file to fingerprinted version
  fs.renameSync(filepath, newPath);

  var webPath = requireConfig.baseUrl === '' ? '/' + JS_MIN_WEB_PATH : JS_MIN_WEB_PATH;
  requireConfig.paths[name] = webPath + newName;
  console.info(clc.green(name + " has been fingerprinted."));
});

var requireFingerprint = checksum(JSON.stringify(requireConfig));
fs.writeFileSync(
    WEB_ROOT + '/require-config-min-' + requireFingerprint + '.js',
    configtools.wrap(requireConfig),
    'utf8'
);

fingerprintTools.write('require-config.js', '/require-config-min-' + requireFingerprint + '.js');
