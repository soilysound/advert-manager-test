define("sdc-base-element-filter", [], function () {

    "use strict";

    return {

        init: function (rootElement, options) {

            if (!rootElement || !options || !options.hasOwnProperty("elementFilterRules")) {
                return;
            }

            var self = this;
            var filterRules = JSON.parse(options.elementFilterRules);

            filterRules.forEach(function (rule) {

                if (!self.ruleIsValid(rule)) {
                    return;
                }

                if (self.getObjectPropertyValue(rule.objectProperty) !== rule.objectPropertyValue) {
                    return;
                }

                var els = rootElement.querySelectorAll(rule.selector);
                els.forEach(function (el) {
                    if (rule.hasOwnProperty("hideParent") && rule.hideParent === true && el.parentNode) {
                        el.parentNode.style.display = "none";
                        return;
                    }
                    el.style.display = "none";
                });
            });
        },

        /**
         * Check that the rule is valid
         * @param rule
         * @returns {boolean}
         */
        ruleIsValid: function (rule) {
            return rule.hasOwnProperty("selector")
                && rule.hasOwnProperty("objectProperty")
                && rule.hasOwnProperty("objectPropertyValue");
        },

        /**
         * Returns the object's property value if it exists
         * @param objectProperty
         * @returns {*}
         */
        getObjectPropertyValue: function (objectProperty) {
            objectProperty = objectProperty.split('.');
            var obj = window[objectProperty.shift()];
            while (obj && objectProperty.length) {
                obj = obj[objectProperty.shift()];
            }
            return obj;
        }
    }

});
